#include <Arduino.h>
#include <ESP8266WiFi.h> //import for wifi functionality
#include <WebSocketsServer.h> //import for websocket
#include <ESP8266WebServer.h>
#include <SoftwareSerial.h>

int ledpin = 2; //defining the OUTPUT pin for LED (D4)

const char *ssid =  "MyTestApp";   //Wifi SSID (Name)   
const char *pass =  "Testapp132"; //wifi password




WebSocketsServer webSocket = WebSocketsServer(432); //websocket init with port 81

void webSocketEvent(uint8_t num, WStype_t type, uint8_t * payload, size_t length) 
{

    String cmd = "";
  //webscket event method
    switch(type) {
        case WStype_DISCONNECTED:
            Serial.println("Websocket is disconnected");
            //case when Websocket is disconnected
            break;
        case WStype_CONNECTED:{
            //wcase when websocket is connected
              Serial.println("Websocket is connected");
              webSocket.sendTXT(num,"connected");
            }
            break;
        case WStype_TEXT:
            for(int i = 0; i < length; i++) 
            {
                cmd = cmd + (char) payload[i]; 
            } //merging payload to single string
            // Serial.println(cmd);

            if(cmd == "poweron")
            { //when command from app is "poweron"
                Serial.write("9");
                digitalWrite(ledpin, HIGH);   //make ledpin output to HIGH  
                // webSocket.sendTXT(num, "poweron:success tvoc is on");
            }
            else if(cmd == "poweroff")
            {
                Serial.write("8");
                digitalWrite(ledpin, LOW);    //make ledpin output to LOW on 'pweroff' command.
                // webSocket.sendTXT(num, "poweroff:success tvoc is off");
            }

            if(cmd == "poweron 2")
            { //when command from app is "poweron"
                Serial.write("7");
                digitalWrite(ledpin, HIGH);   //make ledpin output to HIGH  E
                // webSocket.sendTXT(num, "poweron:success co2 is on");
            }
            else if(cmd == "poweroff 2")
            {
                Serial.write("6");
                digitalWrite(ledpin, LOW);    //make ledpin output to LOW on 'pweroff' command.
                // webSocket.sendTXT(num, "poweroff:success co2 is off");
            }

             //send response to mobile, if command is "poweron" then response will be "poweron:success"
             //this response can be used to track down the success of command in mobile app.
            break;
        // case WStype_FRAGMENT_TEXT_START:
        //     break;
        // case WStype_FRAGMENT_BIN_START:
        //     break;
        case WStype_BIN:
            hexdump(payload, length);
            break;
        // default:
        //     break;
    }
}

void setup() {
  
    // Open serial communications and wait for port to open:
    Serial.begin(115200);

    while (!Serial) 
    {
     // wait for serial port to connect. Needed for native USB port only
      Serial.println("waiting for 155200 to connect");
    }

   pinMode(ledpin, OUTPUT); //set ledpin (D2) as OUTPUT pin

   Serial.println("Connecting to wifi");
   
   IPAddress apIP(192, 168, 13, 133);   //Static IP for wifi gateway
   WiFi.softAPConfig(apIP, apIP, IPAddress(255, 255, 255, 0)); //set Static IP gateway on NodeMCU
   WiFi.softAP(ssid, pass); //turn on WIFI

   webSocket.begin(); //websocket Begin
   webSocket.onEvent(webSocketEvent); //set Event for websocket
   Serial.println("Websocket is started");
}


void sendResponse(String value){
    webSocket.sendTXT(0,value);
}

String data = "";

void loop() {
   webSocket.loop(); //keep this line on loop method
   
    // run over and over
    if (Serial.available()) {
        char c = Serial.read();
        Serial.write(Serial.read());
        if(c == ';'){
          sendResponse(data);
          // Serial.println(data);
          data = "";
        }else{
          data += c;  
        }   
    }
    delay(1000);
}
